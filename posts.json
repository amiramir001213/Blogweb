[
    {
        "id": "post-1",
        "title": "درباره‌ی HttpOnly و نقش آن در جلوگیری از حملات XSS",
        "date": "7 اردیبهشت ۱۴۰۴",
        "author": "ادمین",
        "excerpt": "HttpOnly یک ویژگی امنیتی برای کوکی‌هاست که باعث می‌شود این کوکی‌ها فقط از طریق پروتکل HTTP یا HTTPS قابل دسترسی باشند و اسکریپت‌های سمت کلاینت (مثل JavaScript) نتوانند آن‌ها را بخوانند یا تغییر دهند.",
        "image": "xss_image/xss_sample.jpg",
        "content": "<h2>درباره‌ی HttpOnly و نقش آن در جلوگیری از حملات XSS</h2><p>HttpOnly یک ویژگی امنیتی برای کوکی‌هاست که باعث می‌شود این کوکی‌ها فقط از طریق پروتکل HTTP یا HTTPS قابل دسترسی باشند و اسکریپت‌های سمت کلاینت (مثل <code>JavaScript</code>) نتوانند آن‌ها را بخوانند یا تغییر دهند.</p><figure><img src=\"xss_image/xss_sample.jpg\" alt=\"تصویر نمونه برای حمله XSS\" /><figcaption>نمونه‌ای از یک حمله XSS</figcaption></figure><p>زمانی که یک کوکی با ویژگی HttpOnly ست می‌شود، حتی اگر مهاجمی موفق به اجرای کد مخرب (XSS) در مرورگر کاربر شود، دیگر نمی‌تواند با دستورات جاوااسکریپتی مانند <code>document.cookie</code> به محتوای این کوکی دسترسی پیدا کند.</p><h3>نمونه‌ای از ست کردن کوکی با HttpOnly</h3><pre>Set-Cookie: sessionid=abc123; HttpOnly; Secure</pre><p>در این مثال:</p><ul><li><code>HttpOnly</code>: مانع دسترسی جاوااسکریپت به کوکی می‌شود.</li><li><code>Secure</code>: ارسال کوکی را به ارتباط‌های امن (HTTPS) محدود می‌کند.</li></ul><h3>اهمیت HttpOnly در حملات XSS</h3><p>در حملات XSS، هدف اصلی مهاجم معمولاً اجرای کد در مرورگر کاربر برای سرقت اطلاعات حساس مانند <code>Session Token</code> است.</p><p>با فعال کردن HttpOnly روی کوکی‌های حساس:</p><ul><li>سرقت کوکی توسط اسکریپت‌ها غیرممکن می‌شود.</li><li>اما همچنان ممکن است مهاجم از XSS برای تغییر ظاهر صفحه یا ارسال درخواست‌های مخرب استفاده کند.</li></ul><h3>نکته‌ی مهم:</h3><p>HttpOnly فقط از سرقت کوکی جلوگیری می‌کند؛ به‌تنهایی نمی‌تواند جلوی اجرای حملات XSS را بگیرد.</p><p>بنابراین لازم است همراه با روش‌های امنیتی دیگر استفاده شود، مانند:</p><ul><li>فیلتر و پاکسازی ورودی‌ها (<code>Input Validation/Sanitization</code>)</li><li>اعمال سیاست‌های امنیتی محتوا (<code>Content Security Policy - CSP</code>)</li><li>محدودسازی دسترسی‌ها (<code>Access Control</code>)</li></ul><h3>خلاصه و نتیجه‌گیری:</h3><ul><li>همیشه کوکی‌های حساس (مثل <code>Session ID</code>) را با ویژگی HttpOnly ست کنید.</li><li>به HttpOnly به‌عنوان یک سپر دفاعی در برابر سرقت کوکی نگاه کنید، نه راهکاری کامل برای مقابله با XSS.</li><li>برای محافظت کامل، باید از لایه‌های مختلف امنیتی به‌طور همزمان استفاده کنید.</li></ul>"
    },
    {
        "id": "post-2",
        "title": "امنیت وب: چالش‌های رایج",
        "date": "۱۹ اردیبهشت ۱۴۰۴",
        "author": "شما",
        "excerpt": "بررسی چالش‌های رایج امنیتی در توسعه وب و راه‌های مقابله با آن‌ها...",
        "content": "<p>در دنیای توسعه وب، امنیت یکی از مهم‌ترین دغدغه‌های توسعه‌دهندگان است. با رشد روزافزون حملات سایبری، آشنایی با چالش‌های امنیتی و راه‌های مقابله با آن‌ها ضروری است.</p><h2>معرفی چالش‌های رایج امنیتی</h2><p>حملات امنیتی متنوعی وب‌سایت‌ها را تهدید می‌کنند که رایج‌ترین آن‌ها عبارتند از:</p><ul><li>حملات تزریق (SQL Injection)</li><li>حملات XSS (Cross-Site Scripting)</li><li>حملات CSRF (Cross-Site Request Forgery)</li><li>حملات فیشینگ</li><li>حملات DDoS</li></ul><p>در این مقاله، به بررسی هر یک از این چالش‌ها و راه‌های مقابله با آن‌ها می‌پردازیم.</p><h3>حملات تزریق SQL</h3><p>در این نوع حملات، مهاجم با استفاده از ورودی‌های کاربر، کدهای SQL مخرب را به سیستم تزریق می‌کند تا به داده‌های پایگاه داده دسترسی پیدا کند.</p><p>برای مقابله با این نوع حملات، استفاده از Prepared Statements و ORM‌ها توصیه می‌شود.</p><h3>حملات XSS</h3><p>در حملات XSS، مهاجم کدهای JavaScript مخرب را در سایت قرار می‌دهد که توسط مرورگر کاربران اجرا می‌شود.</p><p>استفاده از توابع Sanitization و فیلترهای مناسب، از مهم‌ترین راه‌های مقابله با این نوع حملات است.</p>"
    },
    {
        "id": "post-3",
        "title": "آشنایی با OWASP Top 10",
        "date": "۳ خرداد ۱۴۰۴",
        "author": "ادمین",
        "excerpt": "OWASP Top 10 لیستی از 10 آسیب‌پذیری رایج امنیتی در برنامه‌های وب است که توسط بنیاد OWASP منتشر می‌شود...",
        "content": "<h2>آشنایی با OWASP Top 10</h2><p>OWASP (یا پروژه‌ی امنیت برنامه‌های کاربردی وب باز) یک سازمان غیرانتفاعی است که با هدف بهبود امنیت نرم‌افزار تشکیل شده است. یکی از معروف‌ترین پروژه‌های این سازمان، OWASP Top 10 است.</p><p>OWASP Top 10 لیستی از 10 آسیب‌پذیری رایج امنیتی در برنامه‌های وب است که هر چند سال یک بار به‌روزرسانی می‌شود. آخرین نسخه‌ی این لیست مربوط به سال 2021 است.</p><h3>لیست OWASP Top 10 سال 2021</h3><ol><li>Broken Access Control (کنترل دسترسی ناقص)</li><li>Cryptographic Failures (نقص‌های رمزنگاری)</li><li>Injection (تزریق)</li><li>Insecure Design (طراحی ناامن)</li><li>Security Misconfiguration (پیکربندی نادرست امنیتی)</li><li>Vulnerable and Outdated Components (کامپوننت‌های آسیب‌پذیر و قدیمی)</li><li>Identification and Authentication Failures (نقص‌های شناسایی و احراز هویت)</li><li>Software and Data Integrity Failures (نقص‌های یکپارچگی نرم‌افزار و داده)</li><li>Security Logging and Monitoring Failures (نقص‌های لاگ‌گیری و نظارت امنیتی)</li><li>Server-Side Request Forgery (جعل درخواست سمت سرور)</li></ol><p>آشنایی با این لیست برای تمامی توسعه‌دهندگان وب ضروری است تا بتوانند برنامه‌های امن‌تری ایجاد کنند.</p>"
    }
]